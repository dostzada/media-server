volumes:
  rflood_config:
  torrents:
  prowlarr:

services:
  # Torrent Clients
  qbittorrent:
    container_name: qbittorrent
    hostname: qbittorrent
    image: ghcr.io/hotio/qbittorrent:release-5.0.4
    ports:
      - "8080:8080"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
      - WEBUI_PORTS=8080/tcp,8080/udp
      - VPN_ENABLED=true
      - VPN_CONF=wg0
      - VPN_PROVIDER=pia
      - VPN_LAN_NETWORK=192.168.1.0/24
      - VPN_LAN_LEAK_ENABLED=false
      - VPN_EXPOSE_PORTS_ON_LAN=true
      - VPN_AUTO_PORT_FORWARD=true
      - VPN_AUTO_PORT_FORWARD_TO_PORTS=${QB_PORT}
      - VPN_KEEP_LOCAL_DNS=false
      - VPN_FIREWALL_TYPE=auto
      - VPN_HEALTHCHECK_ENABLED=true
      - VPN_PIA_USER=${PIA_USERNAME}
      - VPN_PIA_PASS=${PIA_PASSWORD}
      # - VPN_PIA_PREFERRED_REGION
      - VPN_PIA_DIP_TOKEN=no
      - VPN_PIA_PORT_FORWARD_PERSIST=false
      - PRIVOXY_ENABLED=false
      - UNBOUND_ENABLED=false
    volumes:
      - ./servarr/qbittorrent/config:/config
      - torrents:/data
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1 #
      - net.ipv6.conf.all.disable_ipv6=1 #
    devices:
      - /dev/net/tun:/dev/net/tun
  qbitmanage:
    container_name: qbitmanage
    hostname: qbitmanage
    image: ghcr.io/hotio/qbitmanage:release-4.1.17
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
      - ARGS
      - VPN_ENABLED=true
      - VPN_CONF=wg0
      - VPN_PROVIDER=pia
      - VPN_LAN_NETWORK=192.168.1.0/24
      - VPN_LAN_LEAK_ENABLED=false
      - VPN_EXPOSE_PORTS_ON_LAN=true
      - VPN_AUTO_PORT_FORWARD=true
      - VPN_AUTO_PORT_FORWARD_TO_PORTS=${QB_PORT}
      - VPN_KEEP_LOCAL_DNS=false
      - VPN_FIREWALL_TYPE=auto
      - VPN_HEALTHCHECK_ENABLED=true
      - VPN_PIA_USER=${PIA_USERNAME}
      - VPN_PIA_PASS=${PIA_PASSWORD}
      # - VPN_PIA_PREFERRED_REGION
      - VPN_PIA_DIP_TOKEN=no
      - VPN_PIA_PORT_FORWARD_PERSIST=false
      - PRIVOXY_ENABLED=false
      - UNBOUND_ENABLED=false
    volumes:
      - ./servarr/qbittorrent/config:/config
      - torrents:/data
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1 #
      - net.ipv6.conf.all.disable_ipv6=1 #
    devices:
      - /dev/net/tun:/dev/net/tun

  rflood:
    container_name: rflood
    image: ghcr.io/hotio/rflood:release-208b9df
    hostname: rflood
    ports:
      - "3000:3000"
      - "5000:5000"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
      - FLOOD_AUTH=false
      - ARGS
      - FLOOD_ARGS
      - VPN_ENABLED=true
      - VPN_CONF=wg0
      - VPN_PROVIDER=pia
      - VPN_LAN_NETWORK=192.168.1.0/24
      - VPN_LAN_LEAK_ENABLED=false
      - VPN_EXPOSE_PORTS_ON_LAN=false
      - VPN_AUTO_PORT_FORWARD=false
      - VPN_AUTO_PORT_FORWARD_TO_PORTS=${QB_PORT}
      - VPN_KEEP_LOCAL_DNS=false
      - VPN_FIREWALL_TYPE=auto
      - VPN_HEALTHCHECK_ENABLED=false
      - VPN_PIA_USER=${PIA_USERNAME}
      - VPN_PIA_PASS=${PIA_PASSWORD}
      # - VPN_PIA_PREFERRED_REGION
      - VPN_PIA_DIP_TOKEN=no
      - VPN_PIA_PORT_FORWARD_PERSIST=false
      - PRIVOXY_ENABLED=false
      - UNBOUND_ENABLED=false
    volumes:
      - rflood_config:/config
      - torrents:/data
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
    devices:
      - /dev/net/tun:/dev/net/tun

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:release-1.30.2.4939
    ports:
      - "9696:9696"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
    volumes:
      - prowlarr:/config
    depends_on:
      - flaresolverr
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:v3.3.21
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped

  # Add the Arr Apps
  radarr:
    image: linuxserver/radarr:5.18.4
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./servarr/radarr/config:/config
      #- /home/khaled/media/media/movies:/movies
      #- /home/khaled/media/torrents/downloads:/downloads
    network_mode: bridge
    ports:
      - 7879:7878
    restart: unless-stopped
  # Sonarr for TV Shows
  sonarr:
    image: linuxserver/sonarr:4.0.13
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./servarr/sonarr/config:/config
      #- /home/khaled/media/media/tv:/tv
      #- /home/khaled/media/torrents/downloads:/downloads
    network_mode: bridge
    ports:
      - 8988:8989
    restart: unless-stopped

  # CWA for books
  calibre-web-automated:
    image: crocodilestick/calibre-web-automated:V3.0.4
    container_name: calibre-web-automated
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.
      - ./servarr/cwa/config:/config
      # This is an ingest dir, NOT a library one. All files placed here are REMOVED AFTER PROCESSING
      - ./servarr/cwa/ingest:/cwa-book-ingest
      # If you don't have an existing library, CWA will automatically create one at the bind provided here
      - ./servarr/cwa/library:/calibre-library
    ports:
      - 8083:8083
    restart: unless-stopped

  calibre-web-automated-book-downloader:
    image: ghcr.io/calibrain/calibre-web-automated-book-downloader:20250214
    environment:
      FLASK_PORT: 8084
      FLASK_DEBUG: false
      CLOUDFLARE_PROXY_URL: http://cloudflarebypassforscraping:8000
      INGEST_DIR: /cwa-book-ingest
      BOOK_LANGUAGE: en
    ports:
      - 8084:8084
    # Uncomment the following lines if you want to enable healthcheck
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/request/api/status"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    volumes:
      - ./servarr/cwa/ingest:${INGEST_DIR:-/cwa-book-ingest}

  cloudflarebypassforscraping:
    image: ghcr.io/sarperavci/cloudflarebypassforscraping:latest
    restart: unless-stopped