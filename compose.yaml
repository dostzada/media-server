volumes:
  prowlarr:
    external: true
  profilarr:
    external: true
    name: profilarr
  bazarr-config:
    external: true
    name: bazarr-config
  huntarr:
    external: true
    name: huntarr
  kapowarr:
    external: true
    name: kapowarr
  komga:
    external: true
    name: komga
  cleanuparr:
    external: true
    name: cleanuparr

services:
  # Torrent Clients
  pia:
    image: qmcgaw/gluetun:v3.40.0
    container_name: pia
    # init: true
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=private internet access
      - OPENVPN_USER=${PIA_USERNAME}
      - OPENVPN_PASSWORD=${PIA_PASSWORD}
      - SERVER_REGIONS=CA Montreal
      - OPENVPN_PROTOCOL=udp
      - NONROOT=no
      - DOT=on
      - BLOCK_MALICIOUS=on
      - BLOCK_SURVEILLANCE=off
      - UNBLOCK=
      - FIREWALL=on
      - FIREWALL_OUTBOUND_SUBNETS=
      - HTTPPROXY=on
      - HTTPPROXY_LOG=true
      - HTTPPROXY_USER=${HTTP_PROXY}
      - HTTPPROXY_PASSWORD=${HTTP_PASSWORD}
      - SHADOWSOCKS=on
      - SHADOWSOCKS_LOG=on
      - SHADOWSOCKS_PASSWORD=${SHADOW_PASSWORD}
    network_mode: bridge
    volumes:
      - ./servarr/gluetun/private-internet-access:/gluetun
    ports:
      # pia
      - 8080:8080/tcp
      - 8080:8080/tcp
      - 8388:8388/udp
      - 9091:9091
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  qbittorrent:
    image: ghcr.io/hotio/qbittorrent:release-5.0.5
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORTS=8080/tcp,8080/udp
      - TORRENTING_PORT=6881
    volumes:
      - ./servarr/qbit/config:/config
      - /mnt/ugreen/media/downloads:/downloads #optional
    depends_on:
      - pia
    network_mode: service:pia
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:release-1.37.0.5076
    restart: unless-stopped
    ports:
      - "9696:9696"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
    volumes:
      - prowlarr:/config
    depends_on:
      - flaresolverr
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: flaresolverr/flaresolverr:v3.4.0
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped

  # Add the Arr Apps
  radarr:
    image: linuxserver/radarr:5.27.5
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./servarr/radarr/config:/config
      - /mnt/ugreen/media/movies:/movies
      - /mnt/ugreen/media/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
  # Sonarr for TV Shows
  sonarr:
    image: linuxserver/sonarr:4.0.15
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./servarr/sonarr/config:/config
      - /mnt/ugreen/media/tv:/tv
      - /mnt/ugreen/media/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
  
  profilarr:
    image: santiagosayshey/profilarr:v1.1.3
    container_name: profilarr
    ports:
        - 6868:6868
    volumes:
        - profilarr:/config
    environment:
        - TZ=${TZ}
    restart: unless-stopped
  
  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:release-1.5.2
    restart: unless-stopped
    ports:
      - "6767:6767"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
      - WEBUI_PORTS=6767/tcp,6767/udp
    volumes:
      - bazarr-config:/config
      - /mnt/ugreen/media/bazarr:/data

  cloudflarebypassforscraping:
    image: ghcr.io/sarperavci/cloudflarebypassforscraping:latest
    restart: unless-stopped

  beszel-agent:
    image: "henrygd/beszel-agent"
    container_name: "beszel-agent"
    restart: unless-stopped
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # monitor other disks / partitions by mounting a folder in /extra-filesystems
      - /mnt/ugreen/media:/extra-filesystems/ugreen:ro
    environment:
      LISTEN: 45876
      KEY: ${BESZEL}

  huntarr:
    image: huntarr/huntarr:8.2.10
    container_name: huntarr
    restart: unless-stopped
    ports:
      - "9705:9705"
    volumes:
      - huntarr:/config
    environment:
      - TZ=${TZ}

  kapowarr:
    container_name: kapowarr
    image: mrcas/kapowarr:v1.2.0
    restart: unless-stopped
    volumes:
      - "kapowarr:/app/db"
      - "/mnt/ugreen/media/downloads:/app/temp_downloads"
      - "/mnt/ugreen/media/comics:/comics-1"
    ports:
      - 5656:5656

  komga:
    image: gotson/komga:1.23.3
    container_name: komga
    restart: unless-stopped
    volumes:
      - komga:/config
      - /mnt/ugreen/media/comics:/data
    ports:
      - 1234:25600
    environment:
      - TZ=${TZ}

  cleanuparr:
    image: ghcr.io/cleanuparr/cleanuparr:2.2.0
    container_name: cleanuparr
    restart: unless-stopped
    ports:
      - "11011:11011"
    volumes:
      - cleanuparr:/config
    environment:
      - PORT=11011
      - BASE_PATH=
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=0022
      - TZ=${TZ}